# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'systemInfo.ui'
#
# Created by: PyQt5 UI code generator 5.11.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5 import sip
import psutil
import datetime


class Ui_widget(object):

    def setupUi(self, widget):
        widget.setObjectName("widget")
        # 显示窗口关闭按钮
        widget.setWindowFlags(QtCore.Qt.WindowCloseButtonHint)
        # fixedSize设定为原始大小，就可以禁止调整窗口大小了
        widget.setFixedSize(500, 450)
        widget.resize(500, 450)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("./icon.png"),
                       QtGui.QIcon.Normal, QtGui.QIcon.Off)
        widget.setWindowIcon(icon)
        self.listView = QtWidgets.QListView(widget)
        self.listView.setGeometry(QtCore.QRect(0, 0, 500, 450))
        self.listView.setObjectName("listView")
        self.pushButton_quit = QtWidgets.QPushButton(widget)
        self.pushButton_quit.setGeometry(QtCore.QRect(300, 400, 75, 23))
        self.pushButton_quit.setObjectName("pushButton_quit")
        self.pushButton_select = QtWidgets.QPushButton(widget)
        self.pushButton_select.setGeometry(QtCore.QRect(100, 400, 75, 23))
        self.pushButton_select.setObjectName("pushButton_select")
        self.label_title = QtWidgets.QLabel(widget)
        self.label_title.setGeometry(QtCore.QRect(190, 30, 120, 30))
        self.label_title.setObjectName("label_title")
        self.label_cpu_logical = QtWidgets.QLabel(widget)
        self.label_cpu_logical.setGeometry(QtCore.QRect(50, 80, 400, 25))
        self.label_cpu_logical.setMouseTracking(True)
        self.label_cpu_logical.setAutoFillBackground(False)
        self.label_cpu_logical.setObjectName("label_cpu_logical")
        self.label_cpu_physical = QtWidgets.QLabel(widget)
        self.label_cpu_physical.setGeometry(QtCore.QRect(50, 120, 400, 25))
        self.label_cpu_physical.setMouseTracking(True)
        self.label_cpu_physical.setAutoFillBackground(False)
        self.label_cpu_physical.setObjectName("label_cpu_physical")
        self.label_memory_total = QtWidgets.QLabel(widget)
        self.label_memory_total.setGeometry(QtCore.QRect(50, 160, 400, 25))
        self.label_memory_total.setMouseTracking(True)
        self.label_memory_total.setAutoFillBackground(False)
        self.label_memory_total.setObjectName("label_memory_total")
        self.label_memory_total_available = QtWidgets.QLabel(widget)
        self.label_memory_total_available.setGeometry(QtCore.QRect(50, 200, 400, 25))
        self.label_memory_total_available.setMouseTracking(True)
        self.label_memory_total_available.setAutoFillBackground(False)
        self.label_memory_total_available.setObjectName("label_memory_total_available")
        self.label_memory_total_used = QtWidgets.QLabel(widget)
        self.label_memory_total_used.setGeometry(QtCore.QRect(50, 240, 400, 25))
        self.label_memory_total_used.setMouseTracking(True)
        self.label_memory_total_used.setAutoFillBackground(False)
        self.label_memory_total_used.setObjectName("label_memory_total_used")
        self.label_memory_percent = QtWidgets.QLabel(widget)
        self.label_memory_percent.setGeometry(QtCore.QRect(50, 280, 400, 25))
        self.label_memory_percent.setMouseTracking(True)
        self.label_memory_percent.setAutoFillBackground(False)
        self.label_memory_percent.setObjectName("label_memory_percent")
        self.label_system_start_time = QtWidgets.QLabel(widget)
        self.label_system_start_time.setGeometry(QtCore.QRect(50, 320, 400, 25))
        self.label_system_start_time.setMouseTracking(True)
        self.label_system_start_time.setAutoFillBackground(False)
        self.label_system_start_time.setObjectName("label_system_start_time")
        self.lineEdit_cpu_logical = QtWidgets.QLineEdit(widget)
        self.lineEdit_cpu_logical.setEnabled(False)
        self.lineEdit_cpu_logical.setGeometry(QtCore.QRect(250, 80, 200, 25))
        self.lineEdit_cpu_logical.setFrame(True)
        self.lineEdit_cpu_logical.setDragEnabled(False)
        self.lineEdit_cpu_logical.setReadOnly(False)
        self.lineEdit_cpu_logical.setVisible(False)
        self.lineEdit_cpu_logical.setObjectName("lineEdit_cpu_logical")
        self.lineEdit_cpu_physical = QtWidgets.QLineEdit(widget)
        self.lineEdit_cpu_physical.setEnabled(False)
        self.lineEdit_cpu_physical.setGeometry(QtCore.QRect(250, 120, 200, 25))
        self.lineEdit_cpu_physical.setFrame(True)
        self.lineEdit_cpu_physical.setVisible(False)
        self.lineEdit_cpu_physical.setObjectName("lineEdit_cpu_physical")
        self.lineEdit_memory_total = QtWidgets.QLineEdit(widget)
        self.lineEdit_memory_total.setEnabled(False)
        self.lineEdit_memory_total.setVisible(False)
        self.lineEdit_memory_total.setGeometry(QtCore.QRect(250, 160, 200, 25))
        self.lineEdit_memory_total.setObjectName("lineEdit_memory_total")
        self.lineEdit_memory_total_available = QtWidgets.QLineEdit(widget)
        self.lineEdit_memory_total_available.setEnabled(False)
        self.lineEdit_memory_total_available.setVisible(False)
        self.lineEdit_memory_total_available.setGeometry(QtCore.QRect(250, 200, 200, 25))
        self.lineEdit_memory_total_available.setObjectName("lineEdit_memory_total_available")
        self.lineEdit_memory_total_used = QtWidgets.QLineEdit(widget)
        self.lineEdit_memory_total_used.setEnabled(False)
        self.lineEdit_memory_total_used.setVisible(False)
        self.lineEdit_memory_total_used.setGeometry(QtCore.QRect(250, 240, 200, 25))
        self.lineEdit_memory_total_used.setObjectName("lineEdit_memory_total_used")
        self.lineEdit_system_start_time = QtWidgets.QLineEdit(widget)
        self.lineEdit_system_start_time.setEnabled(False)
        self.lineEdit_system_start_time.setVisible(False)
        self.lineEdit_system_start_time.setGeometry(QtCore.QRect(250, 320, 200, 25))
        self.lineEdit_system_start_time.setObjectName("lineEdit_system_start_time")
        self.lineEdit_memory_percent = QtWidgets.QLineEdit(widget)
        self.lineEdit_memory_percent.setEnabled(False)
        self.lineEdit_memory_percent.setVisible(False)
        self.lineEdit_memory_percent.setGeometry(QtCore.QRect(250, 280, 200, 25))
        self.lineEdit_memory_percent.setObjectName("lineEdit_memory_percent")

        self.retranslateUi(widget)
        self.pushButton_quit.clicked.connect(widget.close)
        QtCore.QMetaObject.connectSlotsByName(widget)
        self.pushButton_select.clicked.connect(self.getSystemInfo)

    def retranslateUi(self, widget):
        _translate = QtCore.QCoreApplication.translate
        widget.setWindowTitle(_translate("widget", "查询系统基本信息-----by lwt"))
        self.pushButton_quit.setText(_translate("widget", "退出"))
        self.pushButton_select.setText(_translate("widget", "查询"))
        self.label_title.setText(_translate("widget", "<html><head/><body><p align=\"center\"><span style=\" font-size:12pt; font-weight:600;\">查询系统信息</span></p></body></html>"))
        self.label_cpu_logical.setText(_translate("widget", "<html><head/><body><p><span style=\" font-size:11pt; font-weight:600;\">您的CPU逻辑核心数为：</span></p></body></html>"))
        self.label_cpu_physical.setText(_translate("widget", "<html><head/><body><p><span style=\" font-size:11pt; font-weight:600;\">CPU物理核心数为：</span></p></body></html>"))
        self.label_memory_total.setText(_translate("widget", "<html><head/><body><p><span style=\" font-size:11pt; font-weight:600;\">内存总量为：</span></p></body></html>"))
        self.label_memory_total_available.setText(_translate("widget", "<html><head/><body><p><span style=\" font-size:11pt; font-weight:600;\">可用内存总量为：</span></p></body></html>"))
        self.label_memory_total_used.setText(_translate("widget", "<html><head/><body><p><span style=\" font-size:11pt; font-weight:600;\">已用内存总量为：</span></p></body></html>"))
        self.label_memory_percent.setText(_translate("widget", "<html><head/><body><p><span style=\" font-size:11pt; font-weight:600;\">内存使用百分比为：</span></p></body></html>"))
        self.label_system_start_time.setText(_translate("widget", "<html><head/><body><p><span style=\" font-size:11pt; font-weight:600;\">系统的开机时间为：</span></p></body></html>"))

    def getSystemInfo(self):
        pc_mem = psutil.virtual_memory()
        div_gb_factor = (1024.0 ** 3)
        cpu_logical_count = psutil.cpu_count()
        cpu_physical_count = psutil.cpu_count(logical=False)
        memory_total = round(float(pc_mem.total / div_gb_factor), 4)
        memory_total_available = round(float(pc_mem.available / div_gb_factor), 4)
        memory_total_used = round(float(pc_mem.used / div_gb_factor), 4)
        memory_percent = round(float(pc_mem.percent), 4)
        system_start_time = datetime.datetime.fromtimestamp(psutil.boot_time()).strftime("%Y-%m-%d %H:%M:%S")
        _translate = QtCore.QCoreApplication.translate
        self.lineEdit_cpu_logical.setText(_translate("widget", str(cpu_logical_count) + "个"))
        self.lineEdit_cpu_logical.setVisible(True)
        self.lineEdit_cpu_physical.setText(_translate("widget", str(cpu_physical_count) + "个"))
        self.lineEdit_cpu_physical.setVisible(True)
        self.lineEdit_memory_total.setText(_translate("widget", str(memory_total) + "GB"))
        self.lineEdit_memory_total.setVisible(True)
        self.lineEdit_memory_total_available.setText(_translate("widget", str(memory_total_available) + "GB"))
        self.lineEdit_memory_total_available.setVisible(True)
        self.lineEdit_memory_total_used.setText(_translate("widget", str(memory_total_used) + "GB"))
        self.lineEdit_memory_total_used.setVisible(True)
        self.lineEdit_memory_percent.setText(_translate("widget", str(memory_percent) + "%"))
        self.lineEdit_memory_percent.setVisible(True)
        self.lineEdit_system_start_time.setText(_translate("widget", str(system_start_time)))
        self.lineEdit_system_start_time.setVisible(True)
